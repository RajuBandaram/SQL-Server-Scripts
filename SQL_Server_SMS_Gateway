SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [GYM].[MobileOPTRegister](
	[Srno] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
	[MobileNo] [nvarchar](50) NULL,
	[OTP] [nvarchar](5) NULL,
	[GeneratedTime] [datetime] NULL,
	[GeneratedBy] [numeric](18, 0) NULL,
	[GeneratedMobileIMEI] [nvarchar](150) NULL,
	[GeneratedMobileIMEI2] [nvarchar](150) NULL,
	[ExpiredDate] [datetime] NULL,
	[IsConfirmed] [bit] NULL,
	[ConfirmedTime] [datetime] NULL,
	[IsActive] [bit] NULL,
 CONSTRAINT [PK_MobileOPTRegister] PRIMARY KEY CLUSTERED 
(
	[Srno] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

--------***** For Grant Permissions - Need to Execute from "Master"DB *****-----------

sp_configure 'show advanced options', 1 
GO 

RECONFIGURE; 
GO
 
sp_configure 'Ole Automation Procedures', 1 
GO 

RECONFIGURE; 
GO 

sp_configure 'show advanced options', 1 
GO 

RECONFIGURE;
-----------------------------------------------------------------------------

Create procedure [GYM].[SendSQLSMS]  
    @MobileNo varchar(12),   
    @smstext as varchar(300),   
    @sResponse varchar(1000) OUT as BEGIN       
Declare @iReq int,@hr int       
Declare @sUrl as varchar(500)       
DECLARE @errorSource VARCHAR(8000)   
DECLARE @errorDescription VARCHAR(8000)        
-- Create Object for XMLHTTP
   EXEC @hr = sp_OACreate 'Microsoft.XMLHTTP', @iReq OUT        print @hr        if @hr <> 0     
      Raiserror('sp_OACreate Microsoft.XMLHTTP FAILED!', 16, 1)        
Set @sUrl='http://113.193.191.132/smpp/?username=Transformers&password=698322&from=TRFRMS&to=#MobNo#&text=#Msg#'
set @sUrl=REPLACE(@sUrl,'#MobNo#','91'+@MobileNo)       
set @sUrl=REPLACE(@sUrl,'#Msg#',@smstext)        
print @sUrl        
-- sms code start
   EXEC @hr = sp_OAMethod @iReq, 'Open', NULL, 'GET', @sUrl, true       
print @hr        
if @hr <> 0     
      Raiserror('sp_OAMethod Open FAILED!', 16, 1)        
EXEC @hr = sp_OAMethod @iReq, 'send'       
select @iReq       
print @hr        
if @hr <> 0
		Begin               
			EXEC sp_OAGetErrorInfo @iReq, @errorSource OUTPUT, @errorDescription OUTPUT                
			SELECT [Error Source] = @errorSource, [Description] = @errorDescription                
			Raiserror('sp_OAMethod Send FAILED!', 16, 1)       
		End 
Else 
		Begin    
			EXEC @hr = sp_OAGetProperty @iReq,'responseText', @sResponse OUT   
			print @hr   
			--insert into send_log (Id, mobile, sendtext, response, created, createddate)   
			--			values(0, @MobileNo, @smstext, @sResponse, 'System', GETDATE())
		end
end

-------------  SMS Generating Process  ---------------
Create PROCEDURE [GYM].[GenerateMobileOTP](  @Mobile	nvarchar(50)
										,@UserId	numeric(18)
										,@MobileIMEI nvarchar(150)
										,@MobileIMEI2 nvarchar(150)
										,@OPT		nvarchar(5) output
										,@RetFlag	nvarchar(10) output
										,@RetMsg	nvarchar(200) output
									  )
AS
BEGIN
	SET NOCOUNT ON;
	Begin try
		Declare @smstext  nvarchar(300),@sResponse nvarchar(1000)
			SELECT @OPT=LEFT(NEWID(),5)
			INSERT INTO [GYM].[MobileOPTRegister]
				   ([MobileNo]   ,[OTP]      ,[GeneratedTime]      ,[ExpiredDate]
				   ,[IsConfirmed]      ,[IsActive]	,[GeneratedBy]	,[GeneratedMobileIMEI]	,[GeneratedMobileIMEI2])
			VALUES(@Mobile	,@OPT	,getdate()	,DATEADD(MI, 5, getdate())
						,0				,1			,@UserId		,@MobileIMEI		,@MobileIMEI2)
			SELECT  @smstext='Dear User, Your Verification code is: '+@OPT+'. Thank you for contacting us,We will get back to you soon.'

			EXEC [GYM].[SendSQLSMS]	@Mobile,@smstext,@sResponse OUTPUT

			SELECT @RetFlag='0',@RetMsg='OTP Valid for 5 Minutes only'

			Update [GYM].[MobileOPTRegister]
				SET [IsActive]=0
				Where [ExpiredDate]<getdate()
	End try
	Begin catch
		SELECT @RetFlag='-1',@RetMsg=ERROR_MESSAGE()
	End catch
END


------------Update SMS Confirmation-----------------
Create PROCEDURE [GYM].[ReadMobileOTP]
(
	 @Mobile	nvarchar(50)
	,@OTP		nvarchar(5)
	,@RetFlag	nvarchar(10) output
	,@RetMsg	nvarchar(200) output
)
AS
BEGIN
	SET NOCOUNT ON;
	Begin try
		Declare @GeneratedOPT nvarchar(5),@Srno numeric(18)
		SELECT top 1 @GeneratedOPT=[OTP],@Srno=[Srno] FROM [GYM].[MobileOPTRegister] where MobileNo=@Mobile and [ExpiredDate]>getdate() and IsActive=1
			Order by [GeneratedTime] desc
		If @GeneratedOPT=@OTP
			Begin
				UPDATE [GYM].[MobileOPTRegister]
				   SET [IsConfirmed] = 1
					  ,[ConfirmedTime] = getdate()
					  ,[IsActive] = 0
				 WHERE [Srno]= @Srno
				SELECT @RetFlag= '0',@RetMsg= 'Success'
			End
		Else 
			Begin
				SELECT @RetFlag= '-1',@RetMsg= 'OTP was Invalid/Expired'
			end
	End try
	Begin catch
		SELECT @RetFlag='-1',@RetMsg=ERROR_MESSAGE()
	End catch
END

